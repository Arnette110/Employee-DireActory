{"version":3,"sources":["utils/employees.js","components/SearchForm/search.js","components/table.js","components/navbar.js","pages/Search/index.js","App.js","serviceWorker.js","index.js"],"names":["Employees","id","firstName","lastName","email","phone","department","SearchForm","props","className","value","search","onChange","handleInputChange","name","list","type","placeholder","EmployeeTable","onClick","handleSortBtn","map","e","key","NavBar","Search","useState","setSearch","sortedField","setSortedField","useEffect","document","title","findEmployees","filter","toString","indexOf","toLowerCase","event","target","results","direction","sort","a","b","hasOwnProperty","compA","compB","comparison","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.144949c7.chunk.js","sourcesContent":["\nconst Employees = [\n  {\n    id: 1,\n    firstName: \"Chris\",\n    lastName: \"Ellis\",\n    email: \"test@test.com\",\n    phone: \"801-201-5919\",\n    department: \"Development\",\n  },\n  {\n    id: 2,\n    firstName: \"Sloan\",\n    lastName: \"Ellis\",\n    email: \"test1@test.com\",\n    phone: \"718-555-1234\",\n    department: \"UX/UI\",\n  },\n  {\n    id: 3,\n    firstName: \"Sammie\",\n    lastName: \"Ellis\",\n    email: \"test3@test.com\",\n    phone: \"385-555-3241\",\n    department: \"Marketing\",\n  },\n  {\n    id: 4,\n    firstName: \"Tigger\",\n    lastName: \"Ellis\",\n    email: \"test4@test.com\",\n    phone: \"435-555-5678\",\n    department: \"Sales\",\n  },\n  {\n    id: 5,\n    firstName: \"Kimberly\",\n    lastName: \"Knight\",\n    email: \"test5@test.com\",\n    phone: \"415-555-6547\",\n    department: \"Sales\",\n  },\n  {\n    id: 6,\n    firstName: \"Laurel\",\n    lastName: \"Shephard\",\n    email: \"test6@test.com\",\n    phone: \"801-555-2888\",\n    department: \"HR\",\n  },\n  {\n    id: 7,\n    firstName: \"Cecily\",\n    lastName: \"Sakrison\",\n    email: \"test7@test.com\",\n    phone: \"801-555-5913\",\n    department: \"Marketing\",\n  },\n  {\n    id: 8,\n    firstName: \"Kellen\",\n    lastName: \"Sakrison\",\n    email: \"test8@test.com\",\n    phone: \"801-555-2013\",\n    department: \"Development\",\n  },\n  {\n    id: 9,\n    firstName: \"Matthew\",\n    lastName: \"Ellis\",\n    email: \"test9@test.com\",\n    phone: \"801-555-6666\",\n    department: \"Marketing\",\n  },\n  {\n    id: 10,\n    firstName: \"Dustin\",\n    lastName: \"Knight\",\n    email: \"test10@test.com\",\n    phone: \"801-555-9513\",\n    department: \"Sales\",\n  },\n  {\n    id: 11,\n    firstName: \"Sam\",\n    lastName: \"Colvin\",\n    email: \"test11@test.com\",\n    phone: \"801-555-6923\",\n    department: \"Maintenance\",\n  },\n  {\n    id: 12,\n    firstName: \"Simon\",\n    lastName: \"Romano\",\n    email: \"test12@test.com\",\n    phone: \"801-555-5553\",\n    department: \"Maintenance\",\n  },\n  {\n    id: 13,\n    firstName: \"Paul\",\n    lastName: \"Allen\",\n    email: \"test13@test.com\",\n    phone: \"801-555-4532\",\n    department: \"Maintenance\",\n  },\n  {\n    id: 14,\n    firstName: \"Avie\",\n    lastName: \"Sakrison\",\n    email: \"test14@test.com\",\n    phone: \"801-123-4567\",\n    department: \"CEO\",\n  },\n];\n\nexport default Employees","import React from \"react\";\n\nfunction SearchForm(props) {\n  return (\n    <div className=\"field\">\n      <div className=\"control\">\n        <input\n          value={props.search}\n          onChange={props.handleInputChange}\n          name=\"term\"\n          list=\"term\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"filter by column\"\n          id=\"term\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default SearchForm;\n","import React from \"react\";\n\nfunction EmployeeTable(props) {\n  return (\n    <div className=\"card table-container\">\n      <table className=\"table is-bordered is-striped is-narrow is-hoverable is-fullwidth\">\n        <thead>\n          <tr>\n            {/* table columns with buttons to sort by ascending of desceding order */}\n            <th>\n              <button\n                className=\"button\"\n                onClick={() => props.handleSortBtn(\"id\")}\n              >\n                <span className=\"has-text-weight-bold\">User ID</span>\n                <span className=\"icon is-small\">\n                  <i className=\"fas fa-arrows-alt-v\"></i>\n                </span>\n              </button>\n            </th>\n            <th className=\"control\">\n              <button\n                className=\"button\"\n                onClick={() => props.handleSortBtn(\"firstName\")}\n              >\n                <span className=\"has-text-weight-bold\">First Name</span>\n                <span className=\"icon is-small\">\n                  <i className=\"fas fa-arrows-alt-v\"></i>\n                </span>\n              </button>\n            </th>\n            <th>\n              <button\n                className=\"button\"\n                onClick={() => props.handleSortBtn(\"lastName\")}\n              >\n                <span className=\"has-text-weight-bold\">Last Name</span>\n                <span className=\"icon is-small\">\n                  <i className=\"fas fa-arrows-alt-v\"></i>\n                </span>\n              </button>\n            </th>\n            <th>\n              <button className=\"button\">\n                <span className=\"has-text-weight-bold\">E-mail</span>\n              </button>\n            </th>\n            <th>\n              <button\n                className=\"button\"\n                onClick={() => props.handleSortBtn(\"phone\")}\n              >\n                <span className=\"has-text-weight-bold\">Phone</span>\n                <span className=\"icon is-small\">\n                  <i className=\"fas fa-arrows-alt-v\"></i>\n                </span>\n              </button>\n            </th>\n            <th>\n              <button\n                className=\"button\"\n                onClick={() => props.handleSortBtn(\"department\")}\n              >\n                <span className=\"has-text-weight-bold\">Department</span>\n                <span className=\"icon is-small\">\n                  <i className=\"fas fa-arrows-alt-v\"></i>\n                </span>\n              </button>\n            </th>\n          </tr>\n        </thead>\n        {/* loop through Employees and map to table */}\n        {props.Employees.map((e) => (\n          <tbody key={e.id}>\n            <tr>\n              <td>{e.id}</td>\n              <td>{e.firstName}</td>\n              <td>{e.lastName}</td>\n              <td>{e.email}</td>\n              <td>{e.phone}</td>\n              <td>{e.department}</td>\n            </tr>\n          </tbody>\n        ))}\n      </table>\n    </div>\n  );\n}\n\nexport default EmployeeTable;\n","import React from \"react\";\n\nfunction NavBar() {\n  return (\n    <div className=\"hero is-dark has-text-centered\">\n      <div className=\"hero-body\">\n        <h1 className=\"title\">C@rrot Co.</h1>\n        <br/>\n        <h2 className=\"subtitle\">Employee Directory</h2>\n      </div>\n    </div>\n  );\n}\n\nexport default NavBar;\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from \"react\";\nimport Employees from \"../../utils/employees\";\nimport SearchForm from \"../../components/SearchForm/search\";\nimport EmployeeTable from \"../../components/table\";\nimport NavBar from \"../../components/navbar\";\n\nexport default function Search() {\n  const [search, setSearch] = useState(\"\");\n  const [sortedField, setSortedField] = useState(\"\");\n\n  useEffect(() => {\n    document.title = \"C@rr0t Co. - Employee Directory\";})\n  \n  // filter employees when typing in search bar\n  const findEmployees = Employees.filter((e) => {\n    return (\n      e[\"id\"].toString().indexOf(search.toString()) !== -1 ||\n      e[\"firstName\"].toLowerCase().indexOf(search.toLowerCase()) !== -1 ||\n      e[\"lastName\"].toLowerCase().indexOf(search.toLowerCase()) !== -1 ||\n      e[\"email\"].toLowerCase().indexOf(search.toLowerCase()) !== -1 ||\n      e[\"phone\"].toLowerCase().indexOf(search.toLowerCase()) !== -1 ||\n      e[\"department\"].toLowerCase().indexOf(search.toLowerCase()) !== -1\n    );\n  });\n\n  // set value of input box to search state\n  const handleInputChange = (event) => {\n    setSearch(event.target.value);\n  };\n\n  // sort columns button function\n  const handleSortBtn = (key) => {\n   \n    \n    let direction = 'ascending';\n\n    \n    if (\n      sortedField &&\n      sortedField.key === key &&\n      sortedField.direction === 'ascending'\n    ) {\n      direction = 'descending';\n    }\n    setSortedField({ key, direction });\n    \n    \n   \n    if(sortedField !== null) {\n      \n      // sort Employees by property key that will be passed in on the button click in table.js\n      Employees.sort((a, b) => {\n        \n        if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key))return 0;\n        \n       const compA = (typeof a[key] === 'string') ? a[key].toLowerCase() : a[key]\n       const compB = (typeof b[key] === \"string\") ? b[key].toLowerCase() : b[key];\n       let comparison = 0\n       if (compA > compB) {\n         comparison = 1\n       } else if (compA < compB) {\n         comparison = -1\n       }\n       return(\n         direction === 'ascending' ? (comparison * 1) : -1\n       )\n      \n      });\n    }\n  };\n\n    \n  \n\n  return (\n    <div>\n      <NavBar />\n      <SearchForm handleInputChange={handleInputChange} results={search} />\n      <EmployeeTable\n        Employees={findEmployees}\n        handleSortBtn={handleSortBtn}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport Search from \"./pages/Search/index\";\n\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Search/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}